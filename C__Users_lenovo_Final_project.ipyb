{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2> Battle of Neigborhood Capstone full project week 1 and 2 </h2>\n",
    "\n",
    "<H3> 1) Business Problem and Discussion </H3>\n",
    "This is my first Capstone full project. The main motive of lab is to show property prices in Ontario area wise. I am taking whole ontario data rather than only toronto property data. Why to work with this data because it will help new immigrants to Canada to explore areas before buying house in Ontario mainly, because 45% of immigrants lands in Ontario only. \n",
    "\n",
    "<h3> Data Discription and how it will be used </h3>\n",
    "\n",
    "For handling this problem , we need Ontario property valuation data according to area and areas latitude and longitude values to show the respective area on the map\n",
    "\n",
    "--Data Source :- https://www.kaggle.com/mnabaee/ontarioproperties/data\n",
    "\n",
    "--Data File format :- .csv\n",
    "\n",
    "<h3> Steps to follow </h3>\n",
    "<ol> <li>a) Download .csv file from https://www.kaggle.com/mnabaee/ontarioproperties/data , or can parse the data from html page</li> -------------------------------------------------------          \n",
    "    <li>b) Wrangle the data, clean it </li> ---------------------------------------------------------------------------------------------------------------------------                                                                                                    \n",
    "    <li>c) Read it into dataframe</li>------------------------------------------------------------------------------------------------------------------                                                                                                        \n",
    "    <li>d) Show the data on map using folium library.</li>-----------------------------------------------------------------------------------------       \n",
    "\n",
    "\n",
    "    \n",
    "<h3> Clean Data </h3>\n",
    "<ol> <li> Drop column that we don't need , Dropping Unnamed column, and extrating addresses on toronto only</li>\n",
    "    <li> Change index according to our need </li>\n",
    "    <li> Geospatial data is already present in kaggle file so we dont need to get location values from Foursquare or google geo file\n",
    "</ol>\n",
    "\n",
    "<H2> Questions that can be asked using the above mentioned datasets </H2>\n",
    "<ul> <li> Which area is costiest?\n",
    "    <li> What areas are under my budget?\n",
    "        <li> What is approximate values of houses in specific area and so on..\n",
    "            </ul>\n",
    "            \n",
    "<h1>Result</h1>\n",
    "\n",
    "A beautiful map after validation of data which shows us the location of diiferent addresses on Map,\n",
    "Top five most expensive properties\n",
    "Least expensive five properties etc \n",
    "\n",
    "\n",
    "<h1>Conclusion:- </h1>\n",
    "This project helps to identify location in toronto according to their property value. We used dataset from kaggle website, link provided above. If we don't have .csv then we can parse information from websites or can get geographical information from various sources like foursquare or google location. Many more things can be done in this project, but right now we analyse the data, changed it according to our need, like we don't need whole ontario data, we need only toronto data, and used folium map to show locations (not all location) on map along with their address, we can popup prices too with addresses.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting E:/Data Science course i have done/IBM Data science with python notes/Capstone course/Final project/Final_project1.py\n"
     ]
    }
   ],
   "source": [
    "%%writefile \"E:/Data Science course i have done/IBM Data science with python notes/Capstone course/Final project/Final_project1.py\"\n",
    "import pandas as pd     # Pandas library for Dataframes\n",
    "import os\n",
    "import numpy as np                  # Numpy for Vectorized Data\n",
    "import json                         # to work with json file\n",
    "from geopy.geocoders import Nominatim # To work with latitude and longitudes\n",
    "import requests                     # to work with http requests\n",
    "from pandas.io.json import json_normalize       # For converting json to dataframe\n",
    "\n",
    "import matplotlib.cm as cm           # to work with plotting modules\n",
    "import matplotlib.colors as colors\n",
    "\n",
    "\n",
    "import folium     # for creating maps\n",
    "print(\"Libraries imported Done\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\lenovo\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.info of        Unnamed: 0                                       Address  \\\n",
       "0               0                   86 Waterford Dr Toronto, ON   \n",
       "1               1              #80 - 100 BEDDOE DR Hamilton, ON   \n",
       "2               2                213 Bowman Street Hamilton, ON   \n",
       "3               3                  102 NEIL Avenue Hamilton, ON   \n",
       "4               6               #1409 - 230 King St Toronto, ON   \n",
       "5               7             254A Monarch Park Ave Toronto, ON   \n",
       "6               8                  532 Caledonia Rd Toronto, ON   \n",
       "7               9                11 REBECCA Street Hamilton, ON   \n",
       "8              10              617 BRIGADOON Drive Hamilton, ON   \n",
       "9              12       51 - 255 MOUNT ALBION Road Hamilton, ON   \n",
       "10             13               1170 LAMBTON Drive Oakville, ON   \n",
       "11             19                  47 Armstrong Ave Toronto, ON   \n",
       "12             20                 3 Bracebridge Ave Toronto, ON   \n",
       "13             21       #808 - 2167 Lake Shore Blvd Toronto, ON   \n",
       "14             22      #2706 - 2167 Lake Shore Blvd Toronto, ON   \n",
       "15             23                #710 - 1080 Bay St Toronto, ON   \n",
       "16             24                  #A - 753 Shaw St Toronto, ON   \n",
       "17             25                 160 Jenkinson Way Toronto, ON   \n",
       "18             26                   40 Hawthorne Rd Toronto, ON   \n",
       "19             27             #4905 - 16 Harbour St Toronto, ON   \n",
       "20             28                  166 Mcnicoll Ave Toronto, ON   \n",
       "21             29                   430 Military Tr Toronto, ON   \n",
       "22             30                  67 Montressor Dr Toronto, ON   \n",
       "23             31                  46 Bruce Farm Dr Toronto, ON   \n",
       "24             32           #1215 - 2627 Mccowan Rd Toronto, ON   \n",
       "25             33                 247 Westmount Ave Toronto, ON   \n",
       "26             34                   31 Yorkshire Rd Toronto, ON   \n",
       "27             35                      34 Ordway Rd Toronto, ON   \n",
       "28             36                47 Waterbeach Cres Toronto, ON   \n",
       "29             37                 2 Moraine Hill Dr Toronto, ON   \n",
       "...           ...                                           ...   \n",
       "25321      124894                 1416 STANBURY RD Oakville, ON   \n",
       "25322      124895           1087 Kestell Boulevard Oakville, ON   \n",
       "25323      124896                 392 Erb Street W Waterloo, ON   \n",
       "25324      124897              3623 Upper James St Hamilton, ON   \n",
       "25325      124898           #Ph#12 - 125 Wilson St Hamilton, ON   \n",
       "25326      124900                  78 Raymar Place Oakville, ON   \n",
       "25327      124901              #209 - 1291 GORDON ST Guelph, ON   \n",
       "25328      124902           4336 ELLIS Street Niagara Falls, ON   \n",
       "25329      124903                128 PALISER Court Oakville, ON   \n",
       "25330      124904           #504 - 111 FORSYTHE ST Oakville, ON   \n",
       "25331      124905           4554 Queen Street Niagara Falls, ON   \n",
       "25332      124906              156 PARKDALE Avenue Hamilton, ON   \n",
       "25333      124907            115 BARNESDALE Avenue Hamilton, ON   \n",
       "25334      124908            509 Maplehurst Avenue Oakville, ON   \n",
       "25335      124909              #326 - 1291 GORDON ST Guelph, ON   \n",
       "25336      124910                  420 REGENT Street London, ON   \n",
       "25337      124911             1096 JALNA BL|Unit 107 London, ON   \n",
       "25338      124912             48 - 14 CADEAU Terrace London, ON   \n",
       "25339      124913             3 - 505 BLUE JAY Drive London, ON   \n",
       "25340      124915       V/L JOINVILLE V/L JOINVILLE Windsor, ON   \n",
       "25341      124916                11766 RIVERSIDE  E Windsor, ON   \n",
       "25342      124917               403 ANDERSON DRIVE Cornwall, ON   \n",
       "25343      124918            LOT 7 Pauline Tom Ave Kingston, ON   \n",
       "25344      124919    4182 THOMAS ALTON Boulevard Burlington, ON   \n",
       "25345      124921              397 PHOENIX CRESCENT Orleans, ON   \n",
       "25346      124922       3100 CARLING AVENUE UNIT#416 Ottawa, ON   \n",
       "25347      124924              5827 GLADEWOODS PLACE Ottawa, ON   \n",
       "25348      124925              6349 DEERMEADOW DRIVE Ottawa, ON   \n",
       "25349      124928                     212 ALVIN ROAD Ottawa, ON   \n",
       "25350      124929  BARTON Street BARTON Street Stoney Creek, ON   \n",
       "\n",
       "                      AreaName  Price ($)        lat        lng  \n",
       "0                     Richview     999888  43.679882 -79.544266  \n",
       "1               Chedoke Park B     399900  43.250000 -79.904396  \n",
       "2            Ainslie Wood East     479000  43.251690 -79.919357  \n",
       "3                    Greenford     285900  43.227161 -79.767403  \n",
       "4                     Downtown     362000  43.651478 -79.368118  \n",
       "5                Old East York    1488000  43.686375 -79.328918  \n",
       "6                     Fairbank         25  43.691193 -79.461662  \n",
       "7             Central Hamilton     254900  43.258541 -79.867615  \n",
       "8                      Gourley     364900  43.216557 -79.904991  \n",
       "9                     Red Hill     304900  43.215706 -79.794189  \n",
       "10                   Clearview    1289000  43.495579 -79.658272  \n",
       "11             Wallace Emerson        113  43.664101 -79.439751  \n",
       "12               Old East York     599900  43.697842 -79.317368  \n",
       "13                    Parkdale         97  43.635578 -79.441345  \n",
       "14                    Parkdale         49  43.635578 -79.441345  \n",
       "15                    Downtown     805900  43.666794 -79.388756  \n",
       "16             Midtown Toronto         97  43.662872 -79.423233  \n",
       "17                 Dorset Park     549900  43.749599 -79.270844  \n",
       "18                    Richview     850000  43.692314 -79.552635  \n",
       "19                    Downtown    1348000  43.642578 -79.376900  \n",
       "20           Hillcrest Village        129  43.799480 -79.357445  \n",
       "21                 Morningside     675000  43.788639 -79.207932  \n",
       "22     St. Andrew - Windfields        113  43.759003 -79.392075  \n",
       "23     Bayview Woods - Steeles         49  43.799358 -79.377914  \n",
       "24                   Agincourt         49  43.807091 -79.265533  \n",
       "25      St. Clair West Village         25  43.682270 -79.443390  \n",
       "26                     Ionview     499900  43.740097 -79.273987  \n",
       "27                Kennedy Park     599000  43.733814 -79.250000  \n",
       "28                     Rexdale     549900  43.726189 -79.582047  \n",
       "29               Tam O'Shanter     698000  43.774624 -79.298141  \n",
       "...                        ...        ...        ...        ...  \n",
       "25321            West Oakville    1149000  43.414345 -79.703712  \n",
       "25322                 Oakville    1799000  43.490730 -79.703148  \n",
       "25323                Beechwood     699900  43.453785 -80.550743  \n",
       "25324               Mount Hope     585000  43.144230 -79.920013  \n",
       "25325         Central Hamilton     349000  43.257370 -79.862144  \n",
       "25326                 Oakville    3100000  43.451092 -79.661636  \n",
       "25327                   Guelph     384888  43.513615 -80.199753  \n",
       "25328            Niagara Falls     214500  43.103577 -79.064323  \n",
       "25329                 Oakville    2500000  43.431152 -79.685654  \n",
       "25330                 Oakville    1098000  43.442711 -79.672424  \n",
       "25331            Niagara Falls     435000  43.106537 -79.068489  \n",
       "25332              Normanhurst          0  43.240665 -79.790024  \n",
       "25333                  Stipley          0  43.255402 -79.833527  \n",
       "25334            West Oakville    1450000  43.428883 -79.698784  \n",
       "25335                   Guelph     307900  43.513615 -80.199753  \n",
       "25336             North London     384900  43.008606 -81.249756  \n",
       "25337               White Oaks      94900  42.934635 -81.227936  \n",
       "25338               River Bend     349000  42.966801 -81.349503  \n",
       "25339                  Uplands     409000  43.040855 -81.269157  \n",
       "25340                  Windsor     139900  42.314938 -83.036362  \n",
       "25341           East Riverside     699900  42.333740 -82.900284  \n",
       "25342                 Cornwall     204900  45.031879 -74.692535  \n",
       "25343                 Kingston     799900  44.275501 -76.444443  \n",
       "25344               Burlington     699900  43.397976 -79.823456  \n",
       "25345                  Orléans     314900  45.471764 -75.494957  \n",
       "25346                 Bayshore     154900  45.353519 -75.807793  \n",
       "25347                  Orléans     624900  45.441273 -75.532745  \n",
       "25348                   Greely     899000  45.238155 -75.602249  \n",
       "25349  Rockcliffe - Manor Park     295000  45.453838 -75.650040  \n",
       "25350             Stoney Creek    1595000  43.220070 -79.689835  \n",
       "\n",
       "[25351 rows x 6 columns]>"
      ]
     },
     "execution_count": 232,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(os.getcwd())  # printing current working directory\n",
    "df_ontario_property = pd.read_csv(\"properties.csv\") # Reading from .csv file that already downloaded from https://www.kaggle.com/mnabaee/ontarioproperties/data\n",
    "df_ontario_property.head(3)    # \n",
    "df_ontario_property.shape\n",
    "df_ontario_property.info"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address</th>\n",
       "      <th>AreaName</th>\n",
       "      <th>Price ($)</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>86 Waterford Dr Toronto, ON</td>\n",
       "      <td>Richview</td>\n",
       "      <td>999888</td>\n",
       "      <td>43.679882</td>\n",
       "      <td>-79.544266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>#80 - 100 BEDDOE DR Hamilton, ON</td>\n",
       "      <td>Chedoke Park B</td>\n",
       "      <td>399900</td>\n",
       "      <td>43.250000</td>\n",
       "      <td>-79.904396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>213 Bowman Street Hamilton, ON</td>\n",
       "      <td>Ainslie Wood East</td>\n",
       "      <td>479000</td>\n",
       "      <td>43.251690</td>\n",
       "      <td>-79.919357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>102 NEIL Avenue Hamilton, ON</td>\n",
       "      <td>Greenford</td>\n",
       "      <td>285900</td>\n",
       "      <td>43.227161</td>\n",
       "      <td>-79.767403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>#1409 - 230 King St Toronto, ON</td>\n",
       "      <td>Downtown</td>\n",
       "      <td>362000</td>\n",
       "      <td>43.651478</td>\n",
       "      <td>-79.368118</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Address           AreaName  Price ($)        lat  \\\n",
       "0       86 Waterford Dr Toronto, ON           Richview     999888  43.679882   \n",
       "1  #80 - 100 BEDDOE DR Hamilton, ON     Chedoke Park B     399900  43.250000   \n",
       "2    213 Bowman Street Hamilton, ON  Ainslie Wood East     479000  43.251690   \n",
       "3      102 NEIL Avenue Hamilton, ON          Greenford     285900  43.227161   \n",
       "4   #1409 - 230 King St Toronto, ON           Downtown     362000  43.651478   \n",
       "\n",
       "         lng  \n",
       "0 -79.544266  \n",
       "1 -79.904396  \n",
       "2 -79.919357  \n",
       "3 -79.767403  \n",
       "4 -79.368118  "
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_ontario_property.drop(['Unnamed: 0'], axis = 1, inplace = True) # Dropping Unnamed Column\n",
    "df_ontario_property.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address</th>\n",
       "      <th>AreaName</th>\n",
       "      <th>Price ($)</th>\n",
       "      <th>lat</th>\n",
       "      <th>lng</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>86 Waterford Dr Toronto, ON</td>\n",
       "      <td>Richview</td>\n",
       "      <td>999888</td>\n",
       "      <td>43.679882</td>\n",
       "      <td>-79.544266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>#80 - 100 BEDDOE DR Hamilton, ON</td>\n",
       "      <td>Chedoke Park B</td>\n",
       "      <td>399900</td>\n",
       "      <td>43.250000</td>\n",
       "      <td>-79.904396</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Address        AreaName  Price ($)        lat  \\\n",
       "0       86 Waterford Dr Toronto, ON        Richview     999888  43.679882   \n",
       "1  #80 - 100 BEDDOE DR Hamilton, ON  Chedoke Park B     399900  43.250000   \n",
       "\n",
       "         lng  \n",
       "0 -79.544266  \n",
       "1 -79.904396  "
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract only toronto addresses from Address column\n",
    "\n",
    "df_ontario_property[df_ontario_property['Address'].str.contains(\"Toronto\")].inplace= True\n",
    "df_ontario_property.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Toronto Addresses</th>\n",
       "      <th>Toronto AreaName</th>\n",
       "      <th>Price ($)</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>86 Waterford Dr Toronto, ON</td>\n",
       "      <td>Richview</td>\n",
       "      <td>999888</td>\n",
       "      <td>43.679882</td>\n",
       "      <td>-79.544266</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>#80 - 100 BEDDOE DR Hamilton, ON</td>\n",
       "      <td>Chedoke Park B</td>\n",
       "      <td>399900</td>\n",
       "      <td>43.250000</td>\n",
       "      <td>-79.904396</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>213 Bowman Street Hamilton, ON</td>\n",
       "      <td>Ainslie Wood East</td>\n",
       "      <td>479000</td>\n",
       "      <td>43.251690</td>\n",
       "      <td>-79.919357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>102 NEIL Avenue Hamilton, ON</td>\n",
       "      <td>Greenford</td>\n",
       "      <td>285900</td>\n",
       "      <td>43.227161</td>\n",
       "      <td>-79.767403</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Toronto Addresses   Toronto AreaName  Price ($)   Latitude  \\\n",
       "0       86 Waterford Dr Toronto, ON           Richview     999888  43.679882   \n",
       "1  #80 - 100 BEDDOE DR Hamilton, ON     Chedoke Park B     399900  43.250000   \n",
       "2    213 Bowman Street Hamilton, ON  Ainslie Wood East     479000  43.251690   \n",
       "3      102 NEIL Avenue Hamilton, ON          Greenford     285900  43.227161   \n",
       "\n",
       "   Longitude  \n",
       "0 -79.544266  \n",
       "1 -79.904396  \n",
       "2 -79.919357  \n",
       "3 -79.767403  "
      ]
     },
     "execution_count": 235,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Renaming column Address to 'Toronto Address'\n",
    "df_ontario_property.rename(columns = {'lat':'Latitude', 'lng':'Longitude', 'Address' :'Toronto Addresses', 'AreaName':'Toronto AreaName'}, inplace = True)\n",
    "df_ontario_property.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Extraction done and any null value replaced by Nan\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1de1d1af400>"
      ]
     },
     "execution_count": 236,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Extracting only first 100 rows from our dataframe\n",
    "\n",
    "df_ontario_property_100 = df_ontario_property.head(100) # Extrated 100 rows from dataframe\n",
    "df_ontario_property_100.replace('','Nan')\n",
    "print('Extraction done and any null value replaced by Nan')\n",
    "\n",
    "# Drop any row which containing Nan \n",
    "df_ontario_property_100.dropna()\n",
    "\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "#plt.figure(figsize = (20,20))\n",
    "#plt.title('30 Areas addresses and their respective prices in $')\n",
    "df_ontario_property_100[0:30].plot(kind='bar', x='Toronto AreaName' , y='Price ($)', figsize = (10,10), title= '30 Areas addresses and their respective prices in $') # Showing 30 areas address and their values\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1de1d13d978>"
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Draw top 5 costliest Areas\n",
    "\n",
    "df_ontario_property.sort_values(by = 'Price ($)' ,ascending = False, inplace = True) # Sort by Price\n",
    "\n",
    "df_top5_costliest = df_ontario_property.head()\n",
    "df_top5_costliest.plot(kind = 'bar', figsize = (5,5), x = 'Toronto AreaName' , y= 'Price ($)')\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<H1> Now visualizing houses area locations and prices on Map\n",
    "</H1> "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "199"
      ]
     },
     "execution_count": 238,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create list of 200 latitude and longitudes\n",
    "locations = df_ontario_property[['Latitude', 'Longitude']]\n",
    "location_list  = locations[0:199].values.tolist()\n",
    "len(location_list)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1de1cdd95f8>"
      ]
     },
     "execution_count": 239,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "map = folium.Map(tiles = 'Stamen Terrain')\n",
    "# popup = df_ontario_property['Toronto Addresses']['Toronto AreaName']\n",
    "\n",
    "map = folium.Map(location=[43.227161, -79.767403], zoom_start=12)\n",
    "for point in range(0, len(location_list)):\n",
    "    folium.Marker(location_list[point], popup = df_ontario_property['Toronto Addresses'][point]).add_to(map)\n",
    "    #folium.Marker(location_list[point], popup = df_ontario_property['Toronto AreaName'][point]).add_to(map)\n",
    "    \n",
    "map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>The map above doesn't look too bad, but there are several improvements that can be made. First, the default OpenStreetMap tiles are rather busy. Second, I noticed that a few data points are not visible when the map is zoomed in at 12.I also noticed that several points are hard to see since they can be very close to each other. To fix these issues, I switch the basemap tiles to CartoDB dark_matter and reduced the zoom level to 11, and I created marker clusters</h3>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 240,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe src=\"about:blank\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" data-html= onload=\"this.contentDocument.open();this.contentDocument.write(atob(this.getAttribute('data-html')));this.contentDocument.close();\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x1de2252b550>"
      ]
     },
     "execution_count": 240,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "map1 = folium.Map(tiles = 'Stamen Toner') # Creating map using folium library\n",
    "\n",
    "\n",
    "map1 = folium.Map(location=[43.227161, -79.767403], zoom_start=8)\n",
    "for point in range(0, len(location_list)):\n",
    "    folium.Marker(location_list[point], popup=df_ontario_property['Toronto Addresses'][point]).add_to(map1)\n",
    "    \n",
    "map1\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2> Top five expensive Properties "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get top five expensive properties\n",
    "\n",
    "df_top5_costliest.head()\n",
    "\n",
    "\n",
    "# Create list of top 5 most expensive addresses\n",
    "\n",
    "\n",
    "locations_top5 = df_top5_costliest[['Latitude','Longitude']]\n",
    "top5_loc_list = locations_top5.values.tolist()\n",
    "top5_loc_list\n",
    "\n",
    "# creating map\n",
    "top5_map = folium.Map(tiles = 'Stamen Toner')\n",
    "\n",
    "top5_map = folium.Map(location = [43.227161, -79.767403], zoom_start = 10)\n",
    "for point in range(0 , len(top5_loc_list)\n",
    "   folium.Marker(top5_loc_list[point], popup=df_top5_costliest['Toronto Addresses'][point]).add_to(top5_map)\n",
    "top5_map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
